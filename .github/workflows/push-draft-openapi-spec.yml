name: Push Draft OpenAPI Spec to APIHub

on:
  push:
    branches:
      - main
      - master

env:
  FILE_PATH_OPENAPI: "src/main/resources/openapi"

jobs:
  API-Version:
    runs-on: ubuntu-latest
    outputs:
      draft_version: ${{ steps.vars.outputs.draft_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get short SHA for versioning
        id: vars
        run: |
          if LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null); then
            :
          else
            LATEST_TAG="v0.0.0"
          fi
          echo "üè∑Ô∏è Latest Git tag resolved to: $LATEST_TAG"
          LATEST_TAG="${LATEST_TAG#v}"

          SHORT_SHA=$(git rev-parse --short HEAD)
          DRAFT_VERSION="${LATEST_TAG}-${SHORT_SHA}"
          
          echo "draft_version=$DRAFT_VERSION"
          echo "draft_version=$DRAFT_VERSION" >> $GITHUB_OUTPUT

  Apply-Version-to-API-Spec:
    needs: [API-Version]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Find OpenAPI file
        id: find_spec
        run: |
          FILE=$(find "${FILE_PATH_OPENAPI}" -name "*.openapi.yml" | head -n 1)
          if [ -z "$FILE" ]; then
            echo "‚ö†Ô∏è *** No OpenAPI spec (*.openapi.yml) found. Skipping publishing draft. ***"
            exit 1
          fi
          echo "openapi_file=$FILE" >> $GITHUB_OUTPUT

      - name: Update info.version in OpenAPI spec using yq
        env:
          API_NAME: ${{ github.event.repository.name }}
          API_VERSION: ${{ needs.API-Version.outputs.draft_version }}
        uses: mikefarah/yq@v4.46.1
        with:
          cmd: |
            yq '
              .info.version = strenv(API_VERSION) |
              .servers[0].url = "https://virtserver.swaggerhub.com/HMCTS-DTS/" + strenv(API_NAME) + "/" + strenv(API_VERSION)
            ' "${{ steps.find_spec.outputs.openapi_file }}" > openapi-versioned.yml

      - name: Upload updated OpenAPI file
        uses: actions/upload-artifact@v4
        with:
          name: updated-openapi-spec
          path: openapi-versioned.yml

  Push-API-to-APIHub:
    needs: [API-Version, Apply-Version-to-API-Spec]
    runs-on: ubuntu-latest
    env:
      SWAGGERHUB_API_KEY: ${{ secrets.APIHUB_API_KEY }}

    steps:
      - name: Download versioned OpenAPI spec
        uses: actions/download-artifact@v4
        with:
          name: updated-openapi-spec
          path: ./

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install SwaggerHub CLI
        run: npm install -g swaggerhub-cli

      - name: Set CLI_API_REF env var
        env:
          SWAGGERHUB_API_KEY: ${{ secrets.APIHUB_API_KEY }}
          APIHUB_OWNER: ${{ vars.APIHUB_ORGANISATION }}
          API_NAME: ${{ github.event.repository.name }}
          API_VERSION: ${{ needs.API-Version.outputs.draft_version }}
        run: |
          echo "CLI_API_REF=${APIHUB_OWNER}/${API_NAME}/${API_VERSION}" >> "$GITHUB_ENV"

      - name: Push API definition into API Hub (UNPUBLISHED)
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apicreate
        run: |
          swaggerhub api:create "${CLI_API_REF}" --file openapi-versioned.yml --visibility public

      - name: Check the API definition exists
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apiget
        run: |
          set -o pipefail
          if ! swaggerhub api:get "${CLI_API_REF}" 2>&1 | tee error.log; then
            echo "‚ùå API definition was not found on APIHub"
            echo "--- CLI Error Output ---"
            cat error.log
            exit 1
          fi

      - name: Validate definition
        # https://github.com/SmartBear/swaggerhub-cli?tab=readme-ov-file#swaggerhub-apivalidate
        run: |
          set -o pipefail
          if ! swaggerhub api:validate "${CLI_API_REF}" 2>&1 | tee error.log; then
            echo "‚ùå OpenAPI definition failed validation"
            echo "--- CLI Error Output ---"
            cat error.log
            exit 1
          fi
